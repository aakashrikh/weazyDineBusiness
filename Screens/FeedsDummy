import React, { Component } from 'react';
import {
    Text,View,ScrollView,
    StyleSheet,Image,Pressable,Dimensions,
    TouchableOpacity,ImageBackground
} from 'react-native';
import {Icon,Header,Input} from 'react-native-elements';
import { color } from 'react-native-elements/dist/helpers';
import LinearGradient from 'react-native-linear-gradient';
import MaterialCommunityIcons from "react-native-vector-icons/MaterialCommunityIcons"
import Post from '../Components/Post';
import RBSheet from 'react-native-raw-bottom-sheet';
import {launchCamera, launchImageLibrary} from 'react-native-image-picker';
import ImagePicker from "react-native-image-crop-picker";
import { RFValue } from 'react-native-responsive-fontsize';
import RNImageFilter from "react-native-image-filter";


//Global StyleSheet Import
const styles = require('../Components/Style.js');

const win = Dimensions.get('window');
const options = {
    title: "Pick an Image",
    storageOptions:{
        skipBackup: true,
        path:'images'
    }
}

// RNImageFilter.getSourceImage(
//     {
//       imageSource: "../img/food.jpg",
//       dataType: "Path",
//       filterType: 1,
//     },
    
//     (source) =>  {
//       this.setState({imageSource});
//       console.log("SOURCE", source);
//       // source returns the height, width and the Base64 string of the image.
//     }
//   );

class Feeds extends Component{

    constructor(props){
        super(props);
    }

    //for header left component
    renderLeftComponent(){
        return(
        <View style={{width:win.width}} >
            <Text style={[styles.h3,]}>Feeds</Text> 
        </View>
        )
    }

    renderRightComponent(){
        return(
            <View>
                 <TouchableOpacity onPress={()=>this.props.navigation.navigate("NewPost")}>
                    <Image source={require('../img/add.png')} 
                    style={{height:25,width:25}}/>
                </TouchableOpacity>
            </View>
        )
    }

    

    gallery =()=>{
        // alert("chl be")
        ImagePicker.openPicker({
            width:300,
            height:400,
            cropping:true,
        }).then(image=>{
            console.log(image);
            this.setState({image:"Image Uploaded"})
            
            this.props.navigation.navigate("NewPost")

        })
    }

 

  
    render(){
        return(
            <View style={[styles.container,{backgroundColor:"#fafafa"}]}>

            <View>
            <Header 
                statusBarProps={{ barStyle: 'dark-content' }}
                leftComponent={this.renderLeftComponent()}
                rightComponent={this.renderRightComponent()}
                ViewComponent={LinearGradient} // Don't forget this!
                linearGradientProps={{
                    colors: ['#fff', '#fff'],
                
                
                }}
                />
            </View>
            
            <ScrollView>

                {/* Component call for add post card */}
                {/* <AddPost/> */}
                
                {/* Component call for posts/feeds card */}
                <View style={{marginTop:10,backgroundColor:"#fafafa"}}>
                <Post navigation={this.props.navigation}/>
                </View>
            </ScrollView>

            
            </View>
        )
    }
}



class AddPost extends Component{

    
    camera =()=>{

        launchCamera(options, (response)=>{
            
            if(response.didCancel){
                console.warn(response)
                console.warn("User cancelled image picker");
            } else if (response.error){
                console.warn('ImagePicker Error: ', response.error);
            }else{
                // const source = {uri: response.assets.uri};
              let path = response.assets.map((path)=>{
                  return (
                      console.warn(path.uri)   
                  )
              })
              this.setState({image:path.uri})
  
                
                
            }
        })
      }
      gallery =()=>{
        ImagePicker.openPicker({
            width:300,
            height:400,
            cropping:true,
        }).then(image=>{
            console.log(image);
            this.setState({image:"Image Uploaded"})

        })
    }


    render(){
        return(
            <View style={style.addPostCard}>
                <View style={{flexDirection:"row"}}>
                    <View style={style.firstView}>
                        <Image source={require("../img/ab.jpg")} style={style.profileImage} />
                        <Text style={[styles.h5,{marginTop:5,marginRight:12,color:"#5d5d5d"}]}>
                            Barbeque Nation
                        </Text>
                    </View>

                    <View style={{flexDirection:"column"}}>
                   <View style={{borderBottomColor:"#5d5d5d",borderBottomWidth:0.5,width:"92%"}}>
                   <Input 
                    placeholder="Write something here.."
                    multiline={true}
                    style={{
                        fontSize:14,
                    }}
                    inputContainerStyle={{
                        width:Dimensions.get("window").width/1.56,
                        borderColor:"transparent"
                    }}/>
                   </View>
                   <View style={{flexDirection:"row", justifyContent:"space-between",marginRight:25}}>
                    {/* photos and video upload */}
                    <View style={{marginTop:-5,flexDirection:"row",marginLeft:10,marginTop:10,}} >
                        <Icon name="images-outline" color="#326bf3" type="ionicon" onPress={()=>this.RBSheet.open()} size={20}/>
                        <Text onPress={()=>this.RBSheet.open()} style={[styles.h5,{color:"#326bf3",marginLeft:10}]}>Photo/Video</Text>
                        
                    </View>
                    {/* post button */}
                    <View style={{backgroundColor:"#326bf3",height:25,width:45,justifyContent:"center", marginRight:5,
                top:8,borderRadius:5}}>
                    <TouchableOpacity >
                        <Text style={[styles.h5,{color:"#fff",alignSelf:"center"}]}>POST</Text>
                    </TouchableOpacity>
                    
                    </View>
                    </View>
                    </View>
                     {/* Bottom Sheet fot FAB */}
              <RBSheet
                        ref={ref => {
                            this.RBSheet = ref;
                        }}
                        closeOnDragDown={true}
                        closeOnPressMask={true}
                        height={150}
                        customStyles={{
                            container:{
                                borderTopLeftRadius:20,
                                borderTopRightRadius:20
                            },
                        wrapper: {
                            // backgroundColor: "transparent",
                            borderWidth: 1
                        },
                        draggableIcon: {
                            backgroundColor: "grey"
                        }
                        }}
                    >
                        {/* bottom sheet elements */}
                    <View>
                        
                        {/* Bottom sheet View */}
                            <View style={{width:"100%",padding:20}}>
                            <TouchableOpacity onPress={this.camera}>
                                        <Text style={style.iconPencil}>
                                            <Icon name='camera' type="ionicon" color={'#0077c0'} size={25}/>
                                        </Text>
                                        <Text style={style.Text}>Take a picture</Text>
                                        </TouchableOpacity>

                                        <TouchableOpacity onPress={this.gallery} > 
                                        <Text style={style.iconPencil}>
                                            <Icon name='folder' type="ionicon" color={'#0077c0'} size={25}/>
                                        </Text>
                                        <Text style={style.Text}>Select from library</Text>
                                        </TouchableOpacity>

                            </View>
                        
                    </View>
                    </RBSheet>


                </View>
            </View>
        )
    }
}


export default Feeds;

const style=StyleSheet.create({
    icon:{
        margin:10
    },
    image:{
        height:100,
        width:100,
        alignSelf:"center",
        marginTop:50
    },
    addPostCard:{
        backgroundColor:"#fff",
        borderRadius:10,
        alignSelf:"center",
        width:Dimensions.get("window").width/1.02,
        // width:"98%",
        padding:15,
        shadowColor: 'grey', 
        shadowOpacity: 1.5,
        elevation:10,
        shadowRadius: 10,
        shadowOffset: { width:1, height: 1 },
        marginTop:5
        
    },
    profileImage:{
        height:50,
        width:50,
        borderWidth:0.2 ,
        borderColor:"grey",
        borderRadius:50,
        marginTop:15
    },
    firstView:{
        flexDirection:"column",
        alignItems:"center",
        // padding:7,
        // backgroundColor:"red",
        borderRightColor:"#d3d3d3",
        borderRightWidth:1,
     
         
    },
    iconPencil:{
        marginLeft:20,
        fontSize:20,
        marginBottom:10
    },
    Text:{
        position:"absolute",
        fontSize:RFValue(16,580),
        marginLeft:80,
        fontFamily:"Raleway-Medium"
    },
})